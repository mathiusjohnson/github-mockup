[{"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/index.tsx":"1","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/app/store.ts":"2","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/reducers/index.ts":"3","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/helpers/localStorage.ts":"4","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/repoSlice.ts":"5","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/filters/filtersSlice.ts":"6","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/languages/languagesSlice.ts":"7","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/languages/languagesAPI.ts":"8","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/components/App.tsx":"9","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/VisibleRepoList.tsx":"10","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/singleRepoPage.tsx":"11","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/RepoList.tsx":"12","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/components/CommitList.tsx":"13","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/RepoItem.tsx":"14","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/filters/Footer.tsx":"15","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/languages/fetchLanguages.tsx":"16","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/filters/FilterLink.ts":"17","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/filters/Link.tsx":"18"},{"size":287,"mtime":1611643328470,"results":"19","hashOfConfig":"20"},{"size":587,"mtime":1611805617829,"results":"21","hashOfConfig":"20"},{"size":458,"mtime":1611643328470,"results":"22","hashOfConfig":"20"},{"size":613,"mtime":1611643328470,"results":"23","hashOfConfig":"20"},{"size":3054,"mtime":1611805617832,"results":"24","hashOfConfig":"20"},{"size":765,"mtime":1611643328468,"results":"25","hashOfConfig":"20"},{"size":2161,"mtime":1611643328468,"results":"26","hashOfConfig":"20"},{"size":491,"mtime":1611700086843,"results":"27","hashOfConfig":"20"},{"size":892,"mtime":1611643328482,"results":"28","hashOfConfig":"20"},{"size":1223,"mtime":1611720799869,"results":"29","hashOfConfig":"20"},{"size":1631,"mtime":1611643328469,"results":"30","hashOfConfig":"20"},{"size":1352,"mtime":1611720735765,"results":"31","hashOfConfig":"20"},{"size":1738,"mtime":1611805830348,"results":"32","hashOfConfig":"20"},{"size":1640,"mtime":1611722300794,"results":"33","hashOfConfig":"20"},{"size":1379,"mtime":1611643328468,"results":"34","hashOfConfig":"20"},{"size":928,"mtime":1611643328468,"results":"35","hashOfConfig":"20"},{"size":399,"mtime":1611805617830,"results":"36","hashOfConfig":"20"},{"size":518,"mtime":1611805617830,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1b72zms",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/index.tsx",[],[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/app/store.ts",[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/reducers/index.ts",[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/helpers/localStorage.ts",[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/repoSlice.ts",["80","81"],"import {\n  createSlice,\n  createAsyncThunk,\n  createEntityAdapter,\n  createSelector\n} from '@reduxjs/toolkit'\nimport axios from 'axios'\n\ninterface repoState {\n  entities: IRepos;\n  ids: Array<number> [];\n  status: string | undefined;\n  error?: null;\n  pending: string | null;\n  fulfilled: string | null;\n  rejected: null;\n}\n\nexport interface IRepos {\n  [key: string]: IRepo,\n  length: any,\n  map: any\n}\n\nexport interface User {\n  login: string;\n  id: number;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n}\n\nexport interface IRepo {\n  id: number;\n  name: string;\n  full_name: string;\n  owner: User;\n  private: boolean;\n  html_url: string;\n  description: string;\n  fork: boolean;\n  url: string;\n  created_at: string;\n  updated_at: string;\n  pushed_at: string;\n  git_url: string;\n  ssh_url: string;\n  clone_url: string;\n  svn_url: string;\n  homepage: string;\n  size: number;\n  stargazers_count: number;\n  watchers_count: number;\n  language: string;\n  forks_count: number;\n  forks: number;\n}\n\n\nconst url = 'http://localhost:4000/repos'\n\nconst reposAdapter = createEntityAdapter({\n  sortComparer: (repoA: IRepo, repoB: IRepo) => repoB.created_at.localeCompare(repoA.created_at)\n})\n\nconst initialState = reposAdapter.getInitialState({\n  entities: {} as IRepos,\n  status: 'idle',\n  error: null,\n  pending: null,\n  fulfilled: null,\n  rejected: null,\n  currentRepo: {}\n})\n\n/* eslint-disable */\n\nexport const fetchRepos = createAsyncThunk<\n// Return type of the payload creator\nIRepos,\n// pending: string | null,\n\n// First argument to the payload creator (provide void if there isn't one)\nvoid,\n{state: repoState}\n>('repos/fetch', async (_, thunkAPI) => {\n  async () => {\n    if (thunkAPI.getState().status !== 'idle') {\n      return;\n    }\n  };\n\n    const response = await axios.get(url)\n\n    return response.data\n  }\n)\n/* eslint-disable */\n\nconst reposSlice = createSlice({\n  name: 'repos',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(fetchRepos.pending, (state, action) => {\n        if (state.status === 'idle') {\n\n      state.status = 'idle'\n        }\n    })\n      .addCase(fetchRepos.fulfilled, (state: any, action) => {\n      state.status = 'succeeded'\n      reposAdapter.upsertMany(state, action.payload)\n    })\n      .addCase(fetchRepos.rejected, (state: any, action) => {\n      state.status = 'failed'\n      state.error = action.error.message || null;\n    })\n  }\n})\n\nexport default reposSlice.reducer;\n\nexport const {\n  selectAll: selectAllRepos,\n  selectById: selectRepoById,\n  selectIds: selectRepoIds\n} = reposAdapter.getSelectors((state: any) => state.repos)\n\n// export const selectCurrentRepo = createSelector([\n//   selectAllRepos,\n//   (  state: unknown) => {\n//     return state\n//   }\n// ])\nexport {}\n","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/filters/filtersSlice.ts",[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/languages/languagesSlice.ts",[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/languages/languagesAPI.ts",[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/components/App.tsx",[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/VisibleRepoList.tsx",["82","83"],"import { connect } from 'react-redux'\nimport { createSelector } from '@reduxjs/toolkit'\nimport RepoList from './RepoList'\nimport { VisibilityFilters } from '../filters/filtersSlice'\nimport {RootState} from '../../reducers'\nimport {IRepo} from './repoSlice'\n\nconst selectRepos = (state: RootState) => state\nconst selectFilter = (state: RootState) => state.visibilityFilter\n\ninterface IRepoArr {\n  filter: any\n  push: any\n  [key: number]: IRepo\n}\nconst selectVisibleRepos = createSelector(\n  [selectRepos, selectFilter],\n  (repos, filter) => {\n    const repoKeys = Object.keys(repos.repos.entities)\n    const repoArr: IRepoArr = []\n    repoKeys.forEach(key => {\n      repoArr.push(repos.repos.entities[key])\n    })\n\n    for (const language in VisibilityFilters) {\n      const filteredLang = VisibilityFilters[language]\n      if (filter === 'SHOW_ALL') {\n        return repoArr\n      }\n      if (filter === filteredLang) {\n        return repoArr.filter((repo: IRepo) => repo.language === filteredLang)\n      }\n    }\n    throw new Error('Unknown filter: ' + filter)\n  }\n)\n\nconst mapStateToProps = (state: RootState) => ({\n  repos: selectVisibleRepos(state)\n})\n\nexport const VisibleRepoList = connect(mapStateToProps)(RepoList)\n","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/singleRepoPage.tsx",[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/RepoList.tsx",[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/components/CommitList.tsx",["84"],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/repos/RepoItem.tsx",[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/filters/Footer.tsx",["85","86","87"],"import { useSelector, useDispatch } from 'react-redux';\nimport { VisibilityFilters, addVisibilityFilter, IVisibilityFilters } from './filtersSlice';\nimport FilterLink from './FilterLink'\nimport { RootState } from '../../reducers/index';\nimport React from 'react';\n\nconst Filter = () => {\n  const dispatch = useDispatch()\n\n  // const languages = useSelector(selectAllLanguages)\n  const languages = useSelector((state: RootState) => state.languages.languages)\n\n  const error = useSelector((state: RootState) => state.languages.error)\n\n  for (const language in languages) {\n    if (Object.hasOwnProperty.call(languages, language)) {\n      const languageElement = languages[language];\n      dispatch(addVisibilityFilter(languageElement))\n\n    }\n  }\n  // languages.forEach(language => {\n  //   dispatch(addVisibilityFilter(language))\n  // })\n  const filterKeys = Object.keys(VisibilityFilters)\n\n  const renderedFilters = filterKeys.map((filter: any, index: number) => {\n    return (\n      <FilterLink key={index} filter={VisibilityFilters[filter as keyof IVisibilityFilters]}>\n        {filter}\n      </FilterLink>\n    )\n  })\n\n  return (\n    <div className=\"flex mt-3 items-center justify-center space-x-8\">\n      <span className=\"font-extrabold\">Show: </span>\n      <div className=\"flex justify-between\">\n        {renderedFilters}\n      </div>\n    </div>\n  )\n}\n\nexport default Filter\n","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/languages/fetchLanguages.tsx",["88"],"import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchLanguages, selectAllLanguages } from './languagesSlice';\nimport { RootState } from '../../reducers/index';\n\nexport default function LanguageList() {\n  const dispatch = useDispatch()\n  const languages = useSelector(selectAllLanguages)\n\n  let content\n\n  const languageStatus = useSelector((state: RootState) => state.languages.status)\n  const error = useSelector((state: RootState) => state.languages.error)\n\n  useEffect(() => {\n    if (languageStatus === 'idle') {\n      dispatch(fetchLanguages())\n    }\n  }, [languageStatus, dispatch])\n\n  if (languageStatus === 'pending') {\n    content = <div className=\"loader\">Loading...</div>\n  } else if (languageStatus === 'fulfilled') {\n    content = languages\n  } else if (languageStatus === 'rejected') {\n    content = <div>{error}</div>\n  }\n  return <div>{content}</div>\n}\n","/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/filters/FilterLink.ts",[],"/Users/fntcstudent/Personal Projects/intermediate-dev-2021-01/web/src/features/filters/Link.tsx",["89"],"import React, {Validator} from 'react'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst Link = ({ active, children, setVisibilityFilter, filter }: {active: boolean, children: Node, setVisibilityFilter: any, filter: Validator<any>}) => {\n  return (\n    <button\n      className=\"btn btn-primary\"\n      onClick={() => setVisibilityFilter(filter)}\n      disabled={active}\n      style={{\n        marginLeft: '4px'\n      }}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport default Link\n",{"ruleId":"90","severity":1,"message":"91","line":20,"column":11,"nodeType":"92","messageId":"93","endLine":20,"endColumn":14,"suggestions":"94"},{"ruleId":"90","severity":1,"message":"91","line":21,"column":8,"nodeType":"92","messageId":"93","endLine":21,"endColumn":11,"suggestions":"95"},{"ruleId":"90","severity":1,"message":"91","line":12,"column":11,"nodeType":"92","messageId":"93","endLine":12,"endColumn":14,"suggestions":"96"},{"ruleId":"90","severity":1,"message":"91","line":13,"column":9,"nodeType":"92","messageId":"93","endLine":13,"endColumn":12,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":41,"column":9,"nodeType":"100","messageId":"101","endLine":41,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":7,"column":16,"nodeType":"104","messageId":"105","endLine":7,"endColumn":21},{"ruleId":"98","severity":1,"message":"106","line":13,"column":9,"nodeType":"100","messageId":"101","endLine":13,"endColumn":14},{"ruleId":"90","severity":1,"message":"91","line":27,"column":51,"nodeType":"92","messageId":"93","endLine":27,"endColumn":54,"suggestions":"107"},{"ruleId":"102","severity":1,"message":"103","line":6,"column":16,"nodeType":"108","messageId":"105","endLine":6,"endColumn":39},{"ruleId":"98","severity":1,"message":"109","line":1,"column":16,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["110","111"],["112","113"],["114","115"],["116","117"],"@typescript-eslint/no-unused-vars","'dateToMilis' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","'error' is assigned a value but never used.",["118","119"],"FunctionDeclaration","'Validator' is defined but never used.",{"messageId":"120","fix":"121","desc":"122"},{"messageId":"123","fix":"124","desc":"125"},{"messageId":"120","fix":"126","desc":"122"},{"messageId":"123","fix":"127","desc":"125"},{"messageId":"120","fix":"128","desc":"122"},{"messageId":"123","fix":"129","desc":"125"},{"messageId":"120","fix":"130","desc":"122"},{"messageId":"123","fix":"131","desc":"125"},{"messageId":"120","fix":"132","desc":"122"},{"messageId":"123","fix":"133","desc":"125"},"suggestUnknown",{"range":"134","text":"135"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"134","text":"136"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"137","text":"135"},{"range":"137","text":"136"},{"range":"138","text":"135"},{"range":"138","text":"136"},{"range":"139","text":"135"},{"range":"139","text":"136"},{"range":"140","text":"135"},{"range":"140","text":"136"},[368,371],"unknown","never",[380,383],[404,407],[416,419],[940,943]]